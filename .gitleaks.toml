# Gitleaks configuration for enhanced security scanning

title = "GitHub MCP Server Security Configuration"

# Rules for detecting secrets and sensitive information
[[rules]]
id = "github-pat"
description = "GitHub Personal Access Token"
regex = '''ghp_[0-9a-zA-Z]{36}'''
tags = ["key", "github"]

[[rules]]
id = "github-oauth"
description = "GitHub OAuth Access Token"
regex = '''gho_[0-9a-zA-Z]{36}'''
tags = ["key", "github"]

[[rules]]
id = "github-app-token"
description = "GitHub App Token"
regex = '''(ghu|ghs)_[0-9a-zA-Z]{36}'''
tags = ["key", "github"]

[[rules]]
id = "github-refresh-token"
description = "GitHub Refresh Token"
regex = '''ghr_[0-9a-zA-Z]{76}'''
tags = ["key", "github"]

[[rules]]
id = "api-key"
description = "Generic API Key"
regex = '''(?i)(api[_-]?key|apikey)\s*[:=]\s*['"][0-9a-zA-Z]{20,}['"]'''
tags = ["key", "api"]

[[rules]]
id = "secret-key"
description = "Generic Secret Key"
regex = '''(?i)(secret[_-]?key|secretkey)\s*[:=]\s*['"][0-9a-zA-Z]{20,}['"]'''
tags = ["key", "secret"]

[[rules]]
id = "password"
description = "Hardcoded Password"
regex = '''(?i)password\s*[:=]\s*['"][^'"\s]{8,}['"]'''
tags = ["password"]

[[rules]]
id = "jwt-token"
description = "JWT Token"
regex = '''eyJ[A-Za-z0-9_-]*\.eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*'''
tags = ["token", "jwt"]

# Allowlist for false positives
[allowlist]
description = "Allowlist for acceptable patterns"
regexes = [
    '''ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''',  # README example tokens
    '''ghp_yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy''',  # README example tokens
    '''mock-token-\d+''',                             # Test mock tokens
    '''test-token-\d+''',                             # Test tokens
    '''example[_-]?token''',                          # Example tokens in docs
]

paths = [
    '''node_modules/''',
    '''dist/''',
    '''.git/''',
    '''.*\.test\.(ts|js)$''',                         # Test files
]
